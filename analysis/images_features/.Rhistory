bdf<-as.data.frame(im_no_NA,wide="c")
bdf<-na.omit(bdf)
x <- colorspace::RGB(bdf$c.1,bdf$c.2,bdf$c.3)
y <- as(x, "HSV")
bdf_SATURA <- cbind(bdf[,c("x","y")],as.data.frame(y@coords))
colnames(bdf_SATURA) <- c("x","y","c.1","c.2","c.3")
rm(im_no_NA)
#load image and create a dataframe with cieLab values
LS_mean_satu <- mean(na.omit(bdf_SATURA$c.2))
LS_sd_satu <- sd(na.omit(bdf_SATURA$c.2))
LS_mean_light <- mean(na.omit(bdf_SATURA$c.3))
LS_sd_light <- sd(na.omit(bdf_SATURA$c.3))
rm(bdf_SATURA)
cbind.data.frame(name,LS_mean_satu,LS_sd_satu,LS_mean_light,LS_sd_light)
}
#----
lumsat(n_im=2)
pict <-length(files)
lum_data <- as.data.frame(do.call(rbind,pbmcapply::pbmclapply(1:pict, function(i) lumsat(n_im=i),mc.cores = parallel::detectCores() )))
write.csv(lum_data,here::here("results","images_features","lumsat.csv"))
rm(list=ls(all=TRUE))
library(ggplot2)
source(here::here("R","functions.R"))
data_elo <- read.csv2(here::here("results","elo_scores.csv"))
data_elo$Id_images
cluster <- read.csv(here::here("results","images_features","cluster.csv"))
names(cluster)
cluster <- cluster[,-1]
lumsat <- read.csv(here::here("results","images_features","lumsat.csv"))
lumsat <- lumsat[,-1]
names(data_elo)
names(cluster)[names(feat) == 'name'] <- 'Id_images'
names(cluster)[names(cluster) == 'name'] <- 'Id_images'
names(lumsat)[names(lumsat) == 'name'] <- 'Id_images'
colors <- read.csv2(here::here("results","images_features","data_color.csv"))
colors$Species.name
lumsat
names(colors)
names(colors)[names(colors) == 'Species.name'] <- 'Id_images'
data_coral_all <- merge(cluster,lumsat)
data_coral_all <- merge(data_coral_all,colors)
write.csv2(data_coral_all,here::here("results","data_coral_all.csv"),row.names = F)
rm(list=ls(all=TRUE))
library(ggplot2)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
names(data_coral_all)
data_elo
rm(list=ls(all=TRUE))
data_elo <- read.csv2(here::here("results","elo_scores.csv"))
cluster <- read.csv(here::here("results","images_features","cluster.csv"))
cluster <- cluster[,-1]
lumsat <- read.csv(here::here("results","images_features","lumsat.csv"))
lumsat <- lumsat[,-1]
colors <- read.csv2(here::here("results","images_features","data_color.csv"))
names(cluster)[names(cluster) == 'name'] <- 'Id_images'
names(lumsat)[names(lumsat) == 'name'] <- 'Id_images'
names(colors)[names(colors) == 'Species.name'] <- 'Id_images'
data_elo
################################################################################################
#' Data collection
#'
#'This script assemble
#'  - the features extracted in cluster.R, lumsat.R
#'  - the Elo scores (aesthetic)
#'
#'into a single data frame used afterward in our analysis
#'
#'.   - data_coral_all.csv
#'
#' @author Nicolas Mouquet, \email{nicolas.mouquet@@cnrs.fr}#'
#'
#' @date 2023/07/11 first created
################################################################################################
rm(list=ls(all=TRUE))
data_elo <- read.csv2(here::here("results","elo_scores.csv"))
cluster <- read.csv(here::here("results","images_features","cluster.csv"))
cluster <- cluster[,-1]
lumsat <- read.csv(here::here("results","images_features","lumsat.csv"))
lumsat <- lumsat[,-1]
colors <- read.csv2(here::here("results","images_features","data_color.csv"))
names(cluster)[names(cluster) == 'name'] <- 'Id_images'
names(lumsat)[names(lumsat) == 'name'] <- 'Id_images'
names(colors)[names(colors) == 'Species.name'] <- 'Id_images'
data_coral_all <- merge(data_elo,cluster)
data_coral_all <- merge(data_coral_all,lumsat)
data_coral_all <- merge(data_coral_all,colors)
write.csv2(data_coral_all,here::here("results","data_coral_all.csv"),row.names = F)
rm(list=ls(all=TRUE))
library(ggplot2)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
varall <- c("CL_cie_d_mean","CL_cie_d_sd","CL_hullarea","SH_n.core.cell_mean","SH_n.core.cell_sd",
"SH_perimeter_mean","SH_perimeter_sd","SH_perim.area.ratio_mean","SH_perim.area.ratio_sd",
"SH_core.area.index_mean","SH_core.area.index_sd","LS_mean_satu","LS_sd_satu","LS_mean_light",
"LS_sd_light","MO_Fourier_pc1","MO_Fourier_pc2","symetry","PCA_col_1","PCA_col_2")
varcor="aesthe"
names(data_coral_all)
feat_norm <- cbind.data.frame(Id_images=data_coral_all$Id_images,aesthe=data_coral_all$Elo_mean_all, data_coral_all[,varall])
varall <- c("CL_cie_d_mean","CL_cie_d_sd","CL_hullarea","SH_n.core.cell_mean","SH_n.core.cell_sd",
"SH_perimeter_mean","SH_perimeter_sd","SH_perim.area.ratio_mean","SH_perim.area.ratio_sd",
"SH_core.area.index_mean","SH_core.area.index_sd","LS_mean_satu","LS_sd_satu","LS_mean_light",
"LS_sd_light","PCA_col_1","PCA_col_2","PCA_col_3","PCA_col_4")
varcor="aesthe"
#normalize and log data
feat_norm <- cbind.data.frame(Id_images=data_coral_all$Id_images,aesthe=data_coral_all$Elo_mean_all, data_coral_all[,varall])
names(data_coral_all)
rm(list=ls())
source(here::here("R","functions.R"))
images_list <- list.files(here::here("data","_BIG_FILES","images","jpg"),full.names=T)
lab_hist_list <- colordistance::getLabHistList(images_list, bins = 2, sample.size = 10000,
ref.white = "D65", lower = rep(0.97, 3), upper = rep(1, 3),
plotting = FALSE, pausing = FALSE,color.weight=0.4, size.weight=0.6)
lab_dist_matrix <- colordistance::getColorDistanceMatrix(lab_hist_list, plotting = FALSE)
color_tab <- as.data.frame(lab_dist_matrix)
colnames(color_tab) <- gsub(".jpg","",colnames(color_tab))
rownames(color_tab) <- gsub(".jpg","",rownames(color_tab))
color_tab[is.na(color_tab)] <- 0
pca_color_tab<-ade4::dudi.pca(color_tab[,c(sample(1:250,10))], scannf=FALSE, nf = 5)
factoextra::fviz_eig(pca_color_tab,main = "Eigenvalues")
res.ind <- factoextra::get_pca_ind(pca_color_tab)
source(here::here('R','functions.R'))
E1 <- round(100*(pca_color_tab$eig[1]/sum(pca_color_tab$eig)),1)
E2 <- round(100*(pca_color_tab$eig[2]/sum(pca_color_tab$eig)),1)
df <- data.frame(x = res.ind$coord[,'Dim.1'],
y = jitter(res.ind$coord[,'Dim.2'],150),
names=rownames(res.ind$coord))
pdf(here::here("figures_tables","images_features","FIG_PCA12.pdf"), width = 10, height = 10)
plot.2d(scale=0.08,size = -35L,coord <- df,pathphoto <- here::here("data","_BIG_FILES","images","png"),xlab=paste0("PC1 (",E1," %)"),ylab=paste0("PC2 (",E2," %)"))
dev.off()
df <- data.frame(x = res.ind$coord[,'Dim.3'],
y = jitter(res.ind$coord[,'Dim.4'],150),
names=rownames(res.ind$coord))
pdf(here::here("figures_tables","images_features","FIG_PCA34.pdf"), width = 10, height = 10)
plot.2d(scale=0.08,size = -35L,coord <- df,pathphoto <- here::here("data","_BIG_FILES","images","png"),xlab=paste0("PC1 (",E1," %)"),ylab=paste0("PC2 (",E2," %)"))
dev.off()
#prepare the output
data_color <- res.ind$coord
data_color$Image_id <- rownames(data_color)
data_color <- data_color[,c("Image_id","Dim.1","Dim.2","Dim.3","Dim.4")]
colnames(data_color) <- c("Species.name","PCA_col_1","PCA_col_2","PCA_col_3","PCA_col_4")
write.csv2(data_color,here::here("results","images_features","data_color.csv"),row.names = F)
###################################################################################################
#'Main analysis presented in the article
#'
#'
#'Produces
#' @author Nicolas Mouquet, \email{nicolas.mouquet@@cnrs.fr},
#'
#'
#' @date 2023/06/11 first created
##################################################################################################
rm(list=ls(all=TRUE))
library(ggplot2)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
names(data_coral_all)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
names(data_coral_all)
data_color
rm(list=ls())
source(here::here("R","functions.R"))
images_list <- list.files(here::here("data","_BIG_FILES","images","jpg"),full.names=T)
lab_hist_list <- colordistance::getLabHistList(images_list, bins = 2, sample.size = 10000,
ref.white = "D65", lower = rep(0.97, 3), upper = rep(1, 3),
plotting = FALSE, pausing = FALSE,color.weight=0.4, size.weight=0.6)
lab_dist_matrix <- colordistance::getColorDistanceMatrix(lab_hist_list, plotting = FALSE)
color_tab <- as.data.frame(lab_dist_matrix)
colnames(color_tab) <- gsub(".jpg","",colnames(color_tab))
rownames(color_tab) <- gsub(".jpg","",rownames(color_tab))
color_tab[is.na(color_tab)] <- 0
#need to select some images to feed the pca with constrated features
pca_color_tab<-ade4::dudi.pca(color_tab[,c(sample(1:250,10))], scannf=FALSE, nf = 5)
factoextra::fviz_eig(pca_color_tab,main = "Eigenvalues")
res.ind <- factoextra::get_pca_ind(pca_color_tab)
data_color <- res.ind$coord
data_color$Image_id <- rownames(data_color)
data_color <- data_color[,c("Image_id","Dim.1","Dim.2","Dim.3","Dim.4")]
colnames(data_color) <- c("Image_id","PCA_col_1","PCA_col_2","PCA_col_3","PCA_col_4")
data_color
names(data_color)
write.csv2(data_color,here::here("results","images_features","data_color.csv"),row.names = F)
library(ggplot2)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
#FEAFTURE ANALYSIS using LM FIG4acdef, FIG5acdef----
names(data_coral_all)
colors <- read.csv2(here::here("results","images_features","data_color.csv"))
################################################################################################
#' Data collection
#'
#'This script assemble
#'  - the features extracted in cluster.R, lumsat.R
#'  - the Elo scores (aesthetic)
#'
#'into a single data frame used afterward in our analysis
#'
#'.   - data_coral_all.csv
#'
#' @author Nicolas Mouquet, \email{nicolas.mouquet@@cnrs.fr}#'
#'
#' @date 2023/07/11 first created
################################################################################################
rm(list=ls(all=TRUE))
data_elo <- read.csv2(here::here("results","elo_scores.csv"))
cluster <- read.csv(here::here("results","images_features","cluster.csv"))
cluster <- cluster[,-1]
lumsat <- read.csv(here::here("results","images_features","lumsat.csv"))
lumsat <- lumsat[,-1]
colors <- read.csv2(here::here("results","images_features","data_color.csv"))
names(cluster)[names(cluster) == 'name'] <- 'Id_images'
names(lumsat)[names(lumsat) == 'name'] <- 'Id_images'
names(colors)[names(colors) == 'Species.name'] <- 'Id_images'
data_coral_all <- merge(data_elo,cluster)
data_coral_all <- merge(data_coral_all,lumsat)
data_coral_all <- merge(data_coral_all,colors)
write.csv2(data_coral_all,here::here("results","data_coral_all.csv"),row.names = F)
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
names(data_coral_all)
varall <- c("CL_cie_d_mean","CL_cie_d_sd","CL_hullarea","SH_n.core.cell_mean","SH_n.core.cell_sd",
"SH_perimeter_mean","SH_perimeter_sd","SH_perim.area.ratio_mean","SH_perim.area.ratio_sd",
"SH_core.area.index_mean","SH_core.area.index_sd","LS_mean_satu","LS_sd_satu","LS_mean_light",
"LS_sd_light","PCA_col_1","PCA_col_2","PCA_col_3","PCA_col_4")
varcor="aesthe"
feat_norm <- cbind.data.frame(Id_images=data_coral_all$Id_images,aesthe=data_coral_all$Elo_mean_all, data_coral_all[,varall])
for (i in varall) feat_norm[,i] <- norm01(as.numeric(feat_norm[,i]))
source(here::here("R","functions.R"))
for (i in varall) feat_norm[,i] <- norm01(as.numeric(feat_norm[,i]))
par(mfrow = c(5, 4))
for(i in 1:length(varall))car::densityPlot(feat_norm[,varall[i]])
par(mfrow = c(5, 4))
for(i in 1:length(varall))car::densityPlot(feat_norm[,varall[i]])
length(varall)
par(mfrow = c(5, 4))
for(i in 1:length(varall))car::densityPlot(feat_norm[,varall[i]])
par(mfrow = c(4, 5))
for(i in 1:length(varall))car::densityPlot(feat_norm[,varall[i]])
varall_sub <- c(5,10,11)
feat_norm[,varall[varall_sub]] <- log10(feat_norm[,varall[varall_sub]]+0.01)
cormat <- function(idcor,data,thr){
#idcor=all_id
#data=data_fisheyes
#thr=0.7
remove <- function(id_name,rem) {
for (i in 1:length(rem)) id_name=id_name[id_name!=rem[i]]
return(id_name)
}
id_temp <- idcor
for (i in 1:length(id_temp))  {
if (length(id_temp)==1) break
cor_mat <- cor(data[,id_temp])
if (i>= dim(cor_mat)[1]) break
rem <- names(which(abs(cor_mat[,i])>thr)[-1])
if (length(rem)>0) id_temp <- remove(id_name=id_temp,rem=rem)
}
return(id_temp)
}
id_tps <- cormat(idcor=varall,data=feat_norm,thr=0.6)
id_tps
look_cor <- function(all_id,dat_cor=datacor,varcor,ord){
# all_id=id_tps
# dat_cor=feat_flowe_rnorm
# varcor=varcor
# ord="PERVAR"
modall <- lm(as.formula(paste(varcor," ~ ", paste(all_id, collapse= "+"))),data=dat_cor, na.action=na.omit)
out_data <- as.data.frame(matrix(NA,ncol=4,nrow=length(all_id)))
colnames(out_data) <- c("var","pervar","R2","pearson.p")
out_data$var <- all_id
for (i in 1:length(all_id))
{
#i=1
cort <- cor.test(dat_cor[,varcor],dat_cor[,all_id[i]])
out_data$pearson.p[i] <- cort$p.value
modminus <- lm(as.formula(paste(varcor," ~ ", paste(all_id[-i], collapse= "+"))),data=dat_cor, na.action=na.omit)
modalone <- lm(as.formula(paste(varcor," ~ ", all_id[i])),data=dat_cor, na.action=na.omit)
out_data$pervar[i] <- (100-(summary(modminus)[[8]]/summary(modall)[[8]])*100)
out_data$R2[i] <- summary(modalone)[[8]]
}
if (ord=="R2") corres <- out_data[order(-out_data$R2),]
if (ord=="PERVAR") corres <- out_data[order(-out_data$pervar),]
if (ord=="PEARSON") corres <- out_data[order(-out_data$pearson.p),]
return(corres)
}
ord <- look_cor(id_tps,dat_cor=feat_norm,varcor,ord="PERVAR")
id_final <- ord$var
id_final
signi=FALSE
thr <- 0.05
while (signi==FALSE){
modint <- lm(as.formula(paste(varcor," ~ ", paste(id_final, collapse= "+"))),data=feat_norm)
#summary(modint)
sumod <- summary(modint)
id_final <- rownames(sumod$coefficients)[sumod$coefficients[,4]<thr][-1]
if (sum(!sumod$coefficients[,4]<thr)==0) signi=TRUE
}
id_final_lm <-  id_final
id_final_lm
modfinal <- lm(as.formula(paste(varcor," ~ ", paste(id_final_lm, collapse= "+"))),data=feat_norm)
summary(modfinal)
data_scale <-  cbind.data.frame(aesthe=feat_norm$aesthe, scale(feat_norm[,id_final_lm]))
modfinal <- lm(as.formula(paste(varcor," ~ ", paste(id_final_lm, collapse= "+"))),data=data_scale)
sum_mod <- summary(modfinal)
x <- rownames(sum_mod$coefficients)
x <-x[-1]
Estimate <- sum_mod$coefficients[-1,"Estimate"]
sdev <- sum_mod$coefficients[-1,"Std. Error"]
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
data_plot
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-60}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
data_plot
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
plot
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-120}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
#Fig PCA_feat
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
data_plot
ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
ylim(-200,450)+
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-200}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
#Fig PCA_feat
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
ylim(-200,450)+
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-280}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
#Fig PCA_feat
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
ylim(-300,450)+
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-310}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
#Fig PCA_feat
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
ylim(-350,450)+
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
data_plot <- cbind.data.frame(name=x,Estimate=Estimate,sdev=sdev)
data_plot <- data_plot[order(data_plot$Estimate,decreasing = FALSE),]
data_plot$pos <- NA
for (i in 1:length(data_plot$pos)) {if (data_plot$Estimate[i]<0) data_plot$pos[i]=10 else data_plot$pos[i]=-400}
data_plot$name <- c("Pattern variation","Brightness","Core area","Color heterogeneity")
fill <- c("tomato","tomato","seagreen3","seagreen3")
#Fig PCA_feat
library(ggplot2)
theme_set(theme_bw())
plot <-  ggplot(data_plot) +
geom_bar( aes(x=name, y=Estimate), stat="identity",  fill=fill, alpha=0.8) +
geom_errorbar( aes(x=name, ymin=Estimate-sdev, ymax=Estimate+sdev), width=0.3, colour="azure4", alpha=0.9, size=1) +
scale_x_discrete(limits=data_plot$name)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=12)
) +
ylim(-450,450)+
xlab("Images Features") +
ylab("Estimates (scaled)") +
coord_flip() +
geom_text(aes(x=name, y=pos,label = name),hjust = 0,size=3.5)
ggplot2::ggsave(filename = here::here("figures_tables", "PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
ggplot2::ggsave(filename = here::here("figures_tables", "images_features","PCA_feat.jpg"),
plot, width = 9, height = 10.5, units = "cm", dpi = 300)
rownames(data_plot)
feat_norm$Species.name
names(feat_norm)
id <- rownames(data_plot)[1]
id
varx=id
vary="aesthe"
df <- data.frame(x = feat_norm[,varx],
y = jitter(feat_norm[,vary],150),
names=feat_norm$Id_images)
tiff(here::here("figures_tables",paste0("Fig_feat_",varx,".tiff")), width = 1100, height = 1100)
plot.2d.lm_labels(scale=0.1,size = -35L,coord <- df,pathphoto <- here::here("data","_BIG_FILES","images","png"),xlab=varx,
ylab=vary,xR=0,yR=1850,colR="#7D7D7D",labelx=data_plot$name[rownames(data_plot)==id],labely="Aesthetic",cexlab=4.5,cexaxis=3.5,
colline="#325395",lwline=8,df=df)
max(feat_norm$aesthe)
rm(list=ls(all=TRUE))
library(ggplot2)
source(here::here("R","functions.R"))
data_coral_all <- read.csv2(here::here("results","data_coral_all.csv"))
feat_norm <- cbind.data.frame(Id_images=data_coral_all$Id_images,aesthe=data_coral_all$Elo_mean_all, data_coral_all[,varall])
varall <- c("CL_cie_d_mean","CL_cie_d_sd","CL_hullarea","SH_n.core.cell_mean","SH_n.core.cell_sd",
"SH_perimeter_mean","SH_perimeter_sd","SH_perim.area.ratio_mean","SH_perim.area.ratio_sd",
"SH_core.area.index_mean","SH_core.area.index_sd","LS_mean_satu","LS_sd_satu","LS_mean_light",
"LS_sd_light","PCA_col_1","PCA_col_2","PCA_col_3","PCA_col_4")
varcor="aesthe"
#normalize and log data
feat_norm <- cbind.data.frame(Id_images=data_coral_all$Id_images,aesthe=data_coral_all$Elo_mean_all, data_coral_all[,varall])
for (i in varall) feat_norm[,i] <- norm01(as.numeric(feat_norm[,i]))
par(mfrow = c(4, 5))
for(i in 1:length(varall))car::densityPlot(feat_norm[,varall[i]])
